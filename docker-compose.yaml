version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash entrypoint.sh
    volumes:
      - .:/app
      - static_volume:/static
      - media_volume:/media
    ports:
      - 8000:8000
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=back.horse-travel.com
      - LETSENCRYPT_HOST=back.horse-travel.com


  db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: booster  # Указываем имя базы данных
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123


  nginx:
     build:
       context: .
       dockerfile: nginx/Dockerfile
     ports:
       - "80:80"


     volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
     depends_on:
       - web


  # nginx:
  #   image: jwilder/nginx-proxy:1.2
  #   ports:
  #   - "80:80"
  #   - "443:443"
  #   volumes:
  #   - ./nginx/default.conf:/etc/nginx/vhost.d/nginx.conf
  #   - static_volume:/usr/src/app/static
  #   - media_volume:/usr/src/app/media
  #   - /var/run/docker.sock:/tmp/docker.sock:ro
  #   - html:/usr/share/nginx/html
  #   - vhost:/etc/nginx/vhost.d
  #   - certs:/etc/nginx/certs

  # acme_companion:
  #   image: nginxproxy/acme-companion:2.2.10
  #   container_name: acme_companion
  #   volumes_from:
  #   - nginx
  #   volumes:
  #   - /var/run/docker.sock:/var/run/docker.sock
  #   - acme:/etc/acme.sh




volumes:
  db_data:
  static_volume:
  media_volume:
  # certs:
  # acme:
  # vhost:
  # html: